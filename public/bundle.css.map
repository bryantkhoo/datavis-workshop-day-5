{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "AxisHorizontal.svelte",
    "AxisVertical.svelte",
    "Tooltip.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport * as d3 from \"d3\";\n\timport AxisHorizontal from \"./AxisHorizontal.svelte\";\n\n\t// access data\n\tlet data = [];\n\td3.csv(\n\t  \"https://raw.githubusercontent.com/bryantkhoo/datavis-workshop-day-5/main/data/500_most_rated_books.csv\"\n\t).then(res => {\n\t  data = res.slice(0, 500);\n\t});\n\n\tconst xAccessor = d => parseFloat(d[\"average_rating\"]);\n\n\tlet xMetric = \"Rating\";\n\n\t// create chart dimensions\n\tlet margin = {\n\t  left: 30,\n\t  top: 0,\n\t  right: 0,\n\t  bottom: 30\n\t};\n\tlet width = 400;\n\tlet height = 600;\n\t$: boundsWidth = width - margin.left - margin.right;\n\t$: boundsHeight = height - margin.top - margin.bottom;\n\n\t// create scales\n\t$: xScale = d3\n\t  .scaleLinear()\n\t  .domain(d3.extent(data, xAccessor))\n\t  .range([0, boundsWidth]);\n\n\t$: nodes = data.map(d => {\n\t  return {\n\t    data: d,\n\t    x: xScale(xAccessor(d)),\n\t    y: boundsHeight / 2,\n\t    r: 7\n\t  };\n\t});\n\n\t$: newNodes = [...nodes];\n\n\t$: d3.forceSimulation(nodes)\n\t  .force(\"collide\", d3.forceCollide().radius(d => d.r + 1))\n\t  .on(\"tick\", () => {\n\t    nodes = [...nodes];\n\t  });\n</script>\n\n<h2>500 of the most rated books on Goodreads</h2>\n\n<figure>\n  <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n    <svg width={width} height={height}>\n      <g transform=\"translate({margin.left}, {margin.top})\">\n        {#each newNodes as d}\n          <circle\n            cx={d.x}\n\t\t\tcy={d.y}\n            r=\"6\"\n            fill=\"#7897AB\"\n          />\n        {/each}\n\n      </g>\n      <g transform=\"translate({margin.left}, {boundsHeight + margin.top })\">\n        <AxisHorizontal\n          scale={xScale}\n          count=\"5\"\n        />\n      </g>\n    </svg>\n    <div\n      class=\"label\"\n      style=\"transform: translate({boundsWidth}px, {boundsHeight + margin.top}px)\">\n      {xMetric}\n    </div>\n  </div>\n</figure>\n\n<style>\n\t.wrapper {\n\t  position: relative;\n\t  margin: 0;\n\t  font-family: sans-serif;\n\t  width: 100%;\n\t  height: 600px;\n\t  min-width: 0;\n\t}\n\n\tsvg {\n\t  overflow: visible;\n\t}\n\n\th2 {\n\t  text-align: center;\n\t  font-family: sans-serif;\n\t}\n\n\t.label {\n\t  position: absolute;\n\t  top: 0;\n\t  left: 0;\n\t  max-width: 4em;\n\t  font-size: 0.6em;\n\t}\n</style>",
    "<script>\n    export let scale;\n    export let count;\n    export let format = d => d;\n  \n      $: ticks = scale.ticks(count);\n  </script>\n  \n  <line\n    x1={scale.range()[1]}\n    stroke=\"black\"\n  />\n  {#each ticks as x}\n    <g transform=\"translate({scale(x)}, 0)\">\n      <text\n        y=\"10\"\n        text-anchor=\"middle\"\n        dominant-baseline=\"hanging\">\n        {format(x)}a<script>\n          export let scale;\n          export let count;\n        \n          $: ticks = scale.ticks(count);\n        </script>\n        \n        <line\n          x1={scale.range()[1]}\n          stroke=\"black\"\n        />\n        {#each ticks as x, i}\n          <g transform=\"translate({scale(x)}, 0)\">\n            <text\n              y=\"10\"\n              text-anchor=\"middle\"\n              dominant-baseline=\"hanging\">\n              {x}\n            </text>\n            <line\n              y1=\"5\"\n              stroke=\"black\"\n            />\n          </g>\n        {/each}\n        \n        <style>\n          text {\n            font-size: 0.8em;\n          }\n        </style>\n      </text>\n      <line\n        y1=\"5\"\n        stroke=\"black\"\n      />\n    </g>\n  {/each}\n  \n  <style>\n      text {\n        font-size: 0.8em;\n      }\n  </style>",
    "<script>\n    export let scale;\n    export let count;\n    export let format = d => d;\n  \n      $: ticks = scale.ticks(count);\n  </script>\n  \n  <line\n    y1={scale.range()[0]}\n    stroke=\"black\"\n  />\n  {#each ticks as y}\n    <g transform=\"translate(0, {scale(y)})\">\n      <text\n        x=\"-10\"\n        text-anchor=\"end\"\n        dominant-baseline=\"middle\">\n        {format(y)}\n      </text>\n  \n      <line\n        x1=\"-5\"\n        stroke=\"black\"\n      />\n    </g>\n  {/each}\n  \n  <style>\n      text {\n        font-size: 0.8em;\n      }\n  </style>",
    "<script>\n    export let x;\n    export let y;\n    // let's set its placement using [xOffset, yOffset]\n    export let placement = [-50, -100];\n  \n    $: side = placement[1] > -50 ? \"bottom\" : \"top\"\n    $: arrowTransform = {\n      top: \"translate(-50%, -100%)\",\n      bottom: \"translate(-50%, 0) rotate(180deg)\",\n    }[side]\n  \n  </script>\n  \n  <div\n    class=\"wrapper\"\n    style=\"transform: translate({x}px, {y}px)\">\n    <div class=\"tooltip-wrapper\"\n      style=\"transform: translate({placement[0]}%, {placement[1]}%)\">\n      <div class=\"tooltip\">\n        <slot />\n      </div>\n    </div>\n    <svg\n      class=\"arrow\"\n      style=\"transform: {arrowTransform}\">\n      <path d=\"M 0 0 L 6 6 L 12 0\" fill=\"white\" stroke=\"black\" />\n    </svg>\n  </div>\n  \n  <style>\n    .wrapper {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 10;\n      /* don't capture mouse events */\n      pointer-events: none;\n    }\n    .tooltip-wrapper {\n      position: absolute;\n      /* make space for the arrow */\n      padding: 5px;\n      z-index: 1;\n    }\n    .arrow {\n      position: absolute;\n      height: 6px;\n      width: 12px;\n      /* keep arrow on top, to cover border */\n      z-index: 2;\n    }\n    .tooltip {\n      padding: 0.5em;\n      background: white;\n      min-width: 8em;\n      text-align: center;\n      font-size: 0.7em;\n      border: 1px solid;\n      box-shadow: 0 13px 27px -5px rgba(50,50,93,0.25),0 8px 16px -8px rgba(0,0,0,0.3);\n    }\n  </style>"
  ],
  "names": [],
  "mappings": "AAoFC,QAAQ,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,UAAU,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,SAAS,CAAE,CAAC,AACd,CAAC,AAED,GAAG,cAAC,CAAC,AACH,QAAQ,CAAE,OAAO,AACnB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,UAAU,AACzB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,KAAK,AAClB,CAAC;AClDI,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,KAAK,AAClB,CAAC;AC/BD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,KAAK,AAClB,CAAC;ACAH,QAAQ,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,EAAE,CAEX,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,gBAAgB,cAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAElB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CAEX,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAClF,CAAC"
}