{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "AxisHorizontal.svelte",
    "Tooltip.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import * as d3 from \"d3\";\n  import AxisHorizontal from \"./AxisHorizontal.svelte\";\n  import Tooltip from \"./Tooltip.svelte\";\n\n  // access data\n  let data = [];\n  d3.csv(\n    \"https://raw.githubusercontent.com/bryantkhoo/datavis-workshop-day-5/main/data/500_most_rated_books.csv\"\n  ).then((res) => {\n    data = res.slice(0, 100);\n  });\n\n  const xAccessor = (d) => parseFloat(d[\"average_rating\"]);\n  const sizeAccessor = (d) => parseInt(d[\"ratings_count\"]);\n  const authorAccessor = (d) => d[\"authors\"];\n\n  let xMetric = \"Rating\";\n\n  // create chart dimensions\n  let margin = {\n    left: 30,\n    top: 0,\n    right: 0,\n    bottom: 30,\n  };\n  let width = 400;\n  let height = 600;\n  $: boundsWidth = width - margin.left - margin.right;\n  $: boundsHeight = height - margin.top - margin.bottom;\n\n  // create scales\n  $: xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, xAccessor))\n    .range([0, boundsWidth]);\n\n  $: sizeScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, sizeAccessor))\n    .range([5, 100]);\n\n  $: authors = [...new Set(data.map((d) => d.authors))];\n\n  $: colors = authors.map((_, i) => {\n    console.log(d3.interpolateRainbow((i + 1) / authors.length));\n    return d3.interpolateRainbow((i + 1) / authors.length);\n  });\n\n  $: colorScale = d3.scaleOrdinal().domain(authors).range(colors);\n  $: console.log(d3.interpolateRainbow());\n  $: console.log(colors);\n  $: nodes = data.map((d) => {\n    return {\n      ...d,\n      x: xScale(xAccessor(d)),\n      y: boundsHeight / 2,\n      r: sizeScale(sizeAccessor(d)),\n    };\n  });\n\n  $: newNodes = [...nodes].map((node) => {\n    node.x = Math.max(30, Math.min(690, node.x));\n    node.y = Math.max(30, Math.min(600, node.y));\n    return node;\n  });\n\n  $: d3.forceSimulation(nodes)\n    .force(\n      \"collide\",\n      d3.forceCollide().radius((d) => d.r + 1)\n    )\n    .on(\"tick\", () => {\n      nodes = [...nodes];\n    });\n\n  let hoveredPoint = null;\n  $: quadtree = d3\n    .quadtree()\n    .x((d) => d.x)\n    .y((d) => d.y)\n    .addAll(nodes);\n</script>\n\n<h1>100 of the most rated books on Goodreads</h1>\n\n<figure>\n  <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n    <svg {width} {height}>\n      <g transform=\"translate({margin.left}, {margin.top})\">\n        {#each newNodes as d}\n          <circle\n            cx={d.x}\n            cy={d.y}\n            r={d.r}\n            fill={hoveredPoint === d\n              ? \"skyblue\"\n              : colorScale(authorAccessor(d))}\n          />\n        {/each}\n        <rect\n          width={boundsWidth}\n          height={boundsHeight}\n          fill=\"transparent\"\n          on:mousemove={(e) => {\n            const pos = d3.pointer(e);\n            const x = pos[0];\n            const y = pos[1];\n            const closestPoint = quadtree.find(x, y);\n            if (!closestPoint) return;\n            const hoveredPointPosition = [closestPoint.x, closestPoint.y];\n            // don't highlight if too far away\n            // a^2 + b^2 = c^2\n            const distance = Math.sqrt(\n              (x - hoveredPointPosition[0]) ** 2 +\n                (y - hoveredPointPosition[1]) ** 2\n            );\n            if (distance < 50) {\n              hoveredPoint = closestPoint;\n            } else {\n              hoveredPoint = null;\n            }\n          }}\n        />\n      </g>\n      <g transform=\"translate({margin.left}, {boundsHeight + margin.top})\">\n        <AxisHorizontal scale={xScale} count=\"5\" />\n      </g>\n    </svg>\n    <div\n      class=\"label\"\n      style=\"transform: translate({boundsWidth}px, {boundsHeight +\n        margin.top +\n        15}px)\"\n    >\n      {xMetric}\n    </div>\n    {#if hoveredPoint}\n      <Tooltip\n        x={margin.left + hoveredPoint.x}\n        y={margin.top + hoveredPoint.y}\n        placement={[\n          hoveredPoint.x > boundsWidth - 50 ? -90 : -50,\n          hoveredPoint.y < 80 ? 0 : -100,\n        ]}\n      >\n        <strong>\n          {hoveredPoint.title}\n        </strong>\n        <div>\n          {hoveredPoint.authors}\n        </div>\n        <div>\n          Rating: {hoveredPoint.average_rating}\n        </div>\n        <div>\n          Ratings given: {hoveredPoint.ratings_count}\n        </div>\n      </Tooltip>\n    {/if}\n  </div>\n</figure>\n\n<style>\n  .wrapper {\n    position: relative;\n    margin: 0;\n    font-family: sans-serif;\n    width: 100%;\n    max-width: 750px;\n    height: 600px;\n    min-width: 0;\n  }\n\n  svg {\n    overflow: visible;\n  }\n\n  h1 {\n    text-align: center;\n    font-family: \"Raleway\", sans-serif;\n  }\n\n  .label {\n    position: absolute;\n    top: 0;\n    left: 0;\n    max-width: 4em;\n    font-size: 0.8em;\n  }\n</style>\n",
    "<script>\n  export let scale;\n  export let count;\n\n  $: ticks = scale.ticks(count);\n</script>\n\n<line x1={scale.range()[1]} stroke=\"#444444\" />\n{#each ticks as x, i}\n  <g transform=\"translate({scale(x)}, 0)\">\n    <text y=\"10\" text-anchor=\"middle\" dominant-baseline=\"hanging\">\n      {x}\n    </text>\n    <line y1=\"5\" stroke=\"#444444\" />\n  </g>\n{/each}\n\n<style>\n  text {\n    font-size: 0.8em;\n    fill: #444444;\n    color: #444444;\n  }\n</style>\n",
    "<script>\n  export let x;\n  export let y;\n  // let's set its placement using [xOffset, yOffset]\n  export let placement = [-50, -100];\n\n  $: side = placement[1] > -50 ? \"bottom\" : \"top\";\n  $: arrowTransform = {\n    top: \"translate(-50%, -100%)\",\n    bottom: \"translate(-50%, 0) rotate(180deg)\",\n  }[side];\n</script>\n\n<div class=\"wrapper\" style=\"transform: translate({x}px, {y}px)\">\n  <div\n    class=\"tooltip-wrapper\"\n    style=\"transform: translate({placement[0]}%, {placement[1]}%)\"\n  >\n    <div class=\"tooltip\">\n      <slot />\n    </div>\n  </div>\n  <svg class=\"arrow\" style=\"transform: {arrowTransform}\">\n    <path d=\"M 0 0 L 6 6 L 12 0\" fill=\"white\" stroke=\"black\" />\n  </svg>\n</div>\n\n<style>\n  .wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    /* don't capture mouse events */\n    pointer-events: none;\n  }\n  .tooltip-wrapper {\n    position: absolute;\n    /* make space for the arrow */\n    padding: 5px;\n    z-index: 1;\n  }\n  .arrow {\n    position: absolute;\n    height: 6px;\n    width: 12px;\n    /* keep arrow on top, to cover border */\n    z-index: 2;\n  }\n  .tooltip {\n    padding: 0.5em;\n    background: white;\n    min-width: 8em;\n    text-align: center;\n    font-size: 0.7em;\n    border: 1px solid;\n    box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n      0 8px 16px -8px rgba(0, 0, 0, 0.3);\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAoKE,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,UAAU,CACvB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,CACb,SAAS,CAAE,CAAC,AACd,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,OAAO,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,SAAS,CAAC,CAAC,UAAU,AACpC,CAAC,AAED,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,KAAK,AAClB,CAAC;AC3KD,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,KAAK,CAChB,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,OAAO,AAChB,CAAC;ACMD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,EAAE,CAEX,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,gBAAgB,eAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAElB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CAEX,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;MAClD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC"
}